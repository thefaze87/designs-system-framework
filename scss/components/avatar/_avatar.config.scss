// Global base utils
@use '../../base/functions/rem-em' as *;
@use '../../base/variables/index' as *;
@use '../../base/variables/sizes' as *;
@use './avatar.variables' as *;

.avatar {
	--bg-color: var(--scorp-blue);
	--text-color: var(--white);
	display: inline-flex;
	align-items: center;
	justify-content: center;
	padding: 0;
	width: var(--width, #{get-rem(36)});
	height: var(--height, #{get-rem(36)});
	min-width: 0;
	color: var(--text-color, var(--white));
	background-color: var(--bg-color, var(--scorp-blue));
	border-radius: var(--border-radius, #{get-rem(8)});
	font-size: var(--font-size, #{get-rem(18)});
	line-height: var(--line-height, #{get-rem(36)});
	font-weight: 600;
	transition: color #{$transition-default}, background-color #{$transition-default}, border-color #{$transition-default}, box-shadow #{$transition-default};
  	position: relative;

	.profile {
	  background-repeat: var(--bg-repeat, no-repeat);
	  background-size: var(--bg-size, cover);
	  background-position: var(--bg-position, center);
	  position: absolute;
	  width: 100%;
	  height: 100%;

	  &__full {
		--background-repeat: unset;
		--background-size: unset;
		--background-position: unset;
		overflow: hidden;
	  }

	  &__cover {
		--background-size: cover;
		--background-position: center;
	  }

	  &__contain {
		--background-size: contain;
		--background-position: center;
	  }
	}
	// Create modifiers for chip colors (Ex: .chip--red)
	@each $class, $map in $avatar-colors {
		$bg-color: map-get($map, 'bg');
		$text-color: map-get($map, 'text');

		&-#{$class} {
			--bg-color: #{$bg-color};
			--text-color: #{$text-color};
		}
	}
	@each $class, $map in $avatar-sizes {
		$height: map-get($map, 'height');
		$width: map-get($map, 'width');
		$radius: map-get($map, 'radius');
		$line-height: map-get($map, 'line-height');
		$size: map-get($map, 'size');

		&-size-#{$class} {
			--height: #{get-rem($height)};
			--width: #{get-rem($width)};
			--border-radius: #{get-rem($radius)};
			--font-size: #{get-rem($size)};
			--line-height: #{get-rem($line-height)};
		}
	}
}
